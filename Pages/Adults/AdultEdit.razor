@page "/family/{familyId}/adult/{adultId}/edit"
@using h1.Data
@using h1.Models
@using global::Models
@inject NavigationManager NavigationManager
@inject IFamilyService FamilyServiceImpl

<EditForm Model="@adultId">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputSelect @bind-Value="myAdult.JobTitle">
        @foreach (Enum item in Enum.GetValues(typeof(JobTitles)))
        {
            <option value="@item">@item.ToString()</option>
        }
    </InputSelect>
    
    <br/><br/>

    First Name: <InputText @bind-Value="myAdult.FirstName" />
    
    <br/><br/>

    Last Name: <InputText @bind-Value="myAdult.LastName" />
        
    <br/><br/>
    
    Hair color <InputText  @bind-Value="myAdult.HairColor"/>
    
    <br/><br/>
    
    Eye color <InputText  @bind-Value="myAdult.EyeColor"/>
    
    <br/><br/>
    
    Gender <InputSelect @bind-Value="myAdult.Sex">
        <option value="male">male</option>
        <option value="female">female</option>
    </InputSelect>
    
    <br/><br/>
    
    Age <InputNumber @bind-Value="myAdult.Age"/>
    
    <br/><br/>
    
    Height <InputNumber @bind-Value="myAdult.Height"/>
    
    <br/><br/>
    
    Wight <InputNumber @bind-Value="myAdult.Weight"/>
    
    <br/><br/>

    <button @onclick='Save'>Update</button>

</EditForm>


@code {

    [Parameter]
    public string familyId { get; set; }

    [Parameter]
    public string adultId { get; set; }

    private Adult myAdult;

    protected override async Task OnInitializedAsync()
    {
        myAdult = FamilyServiceImpl.GetAdultById(familyId, adultId);
    }

    public async Task Save()
    {
        myAdult.Update(myAdult);
        await FamilyServiceImpl.SaveData();
        NavigationManager.NavigateTo($"/family/{familyId}/edit");
    }
}